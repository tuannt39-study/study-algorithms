- Giải thuật sắp xếp Shell Sort

- Giải thuật sắp xếp Shell Sort là gì?
Shell Sort là một giải thuật sắp xếp mang lại hiệu quả cao dựa trên giải thuật sắp xếp chèn (Insertion Sort).
Giải thuật này tránh các trường hợp phải tráo đổi vị trí của hai phần tử xa nhau trong giải thuật sắp xếp chọn (nếu như phần tử nhỏ hơn ở vị trí bên phải khá xa so với phần tử lớn hơn bên trái).

Đầu tiên, giải thuật này sử dụng giải thuật sắp xếp chọn trên các phần tử có khoảng cách xa nhau, sau đó sắp xếp các phần tử có khoảng cách hẹp hơn.
Khoảng cách này còn được gọi là khoảng (interval) – là số vị trí từ phần tử này tới phần tử khác.
Khoảng này được tính dựa vào công thức Knuth như sau:
h = h * 3 + 1
h là Khoảng (interval) với giá trị ban đâu là 1
Giải thuật này khá hiệu quả với các tập dữ liệu có kích cỡ trung bình khi mà độ phức tạp trường hợp xấu nhất và trường hợp trung bình là O(n), với n là số phần tử.

- Giải thuật cho Shell Sort
Bước 1: Khởi tạo giá trị h
Bước 2: Chia list thành các sublist nhỏ hơn tương ứng với h
Bước 3: Sắp xếp các sublist này bởi sử dụng sắp xếp chèn (Insertion Sort)
Bước 4: Lặp lại cho tới khi list đã được sắp xếp

- Giải thuật mẫu cho Shell Sort
Bắt đầu hàm shellSort()
    A : mảng các phần tử
   /* Tính toán giá trị Khoảng (interval)*/
   while interval < A.length /3 thực hiện:
      interval = interval * 3 + 1	    
   kết thúc while
   while interval > 0 thực hiện:
      for outer = interval; outer < A.length; outer ++ thực hiện:
      /* chọn giá trị để chèn */
      valueToInsert = A[outer]
      inner = outer;
         /*dịch chuyển phần tử sang phải*/
         while inner > interval -1 && A[inner - interval] >= valueToInsert do:
            A[inner] = A[inner - interval]
            inner = inner - interval
         kết thúc while
      /* chèn giá trị vào vị trí trên */
      A[inner] = valueToInsert
      kết thúc for
   /* Tính toán giá trị Khoảng (interval)*/
   interval = (interval -1) /3;
   kết thúc while
Kết thúc hàm
